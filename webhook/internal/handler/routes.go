// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"github.com/weridolin/alinLab-webhook/webhook/internal/svc"
	"github.com/weridolin/alinLab-webhook/webhook/ws"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/webhook/api/v1/:uuid",
				Handler: WebhookCalledHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/webhook/api/v1/:uuid",
				Handler: WebhookCalledHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/webhook/api/v1/:uuid",
				Handler: WebhookCalledHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/webhook/api/v1/:uuid",
				Handler: WebhookCalledHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/webhook/api/v1/:uuid",
				Handler: WebhookCalledHandler(serverCtx),
			},
			{
				Method:  http.MethodOptions,
				Path:    "/webhook/api/v1/:uuid",
				Handler: WebhookCalledHandler(serverCtx),
			},
			{
				Method:  http.MethodHead,
				Path:    "/webhook/api/v1/:uuid",
				Handler: WebhookCalledHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/webhook/api/v1/:uuid/history",
				Handler: historyHandler(serverCtx),
			},
		},
	)
	//ws
	server.AddRoutes(
		[]rest.Route{
			{
				Method: http.MethodGet,
				Path:   "/webhook/ws",
				Handler: func(w http.ResponseWriter, r *http.Request) {
					ws.ServeWs(serverCtx.WebsocketManager, w, r)
				},
			},
		},
	)
	//socket.io
	server.AddRoutes(
		[]rest.Route{
			{
				Method: http.MethodGet,
				Path:   "/webhook/socketio",
				Handler: func(w http.ResponseWriter, r *http.Request) {
					serverCtx.SocketIOServer.ServeHTTP(w, r)
				},
			},
		},
	)

}
